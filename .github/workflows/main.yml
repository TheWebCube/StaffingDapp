name: Node-CI

on:
  push:
    branches: [ master, stage, develop, TestNetwork ]

jobs:
  build:

    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[update]')"

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Environment preparation
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/id_rsa
          chmod -R go= ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" >> ~/.ssh/id_rsa
          npm install -g npm

      - name: Install npm dependencies
        run: npm i

      - name: Run build task
        run: npm run build

  deploy-master:
    environment: master
    if: "github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v3

      - name: Environment preparation
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/id_rsa
          chmod -R go= ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" >> ~/.ssh/id_rsa
          sudo apt-add-repository -y -u ppa:ansible/ansible
          sudo apt-get install -y rsync
          sudo apt-get install -y ansible

      - name: Deploy to Server
        run: |
          chmod 700 ci-scripts
          cd ci-scripts
          ansible-playbook -i "${{ secrets.REMOTE_HOST }}" -e "ansible_user=${{ secrets.REMOTE_USER }} ansible_port=${{ secrets.REMOTE_PORT }} \

          DB_LINK=${{ secrets.PROD_DB_LINK }} \
          SENTRY_LINK=${{ secrets.PROD_SENTRY_LINK }} \
          RABBIT_LINK=${{ secrets.PROD_RABBIT_LINK }} \
          ORACLE_LINK=${{ secrets.PROD_ORACLE_LINK }} \
          REDIS_LINK=${{ secrets.PROD_REDIS_LINK }} \
          NOTIFICATION_MESSAGE_BROKER_LINK=${{ secrets.PROD_NOTIFICATION_MESSAGE_BROKER_LINK }} \

          WORK_QUEST_BLOCKCHAIN_NETWORK=${{ secrets.PROD_WORK_QUEST_BLOCKCHAIN_NETWORK }} \
          BSC_BLOCKCHAIN_NETWORK=${{ secrets.PROD_BSC_BLOCKCHAIN_NETWORK }} \
          ETHEREUM_BLOCKCHAIN_NETWORK=${{ secrets.PROD_ETHEREUM_BLOCKCHAIN_NETWORK }} \
          POLYGONSCAN_BLOCKCHAIN_NETWORK=${{ secrets.PROD_POLYGONSCAN_BLOCKCHAIN_NETWORK }} \

          WORK_QUEST_PROD_NETWORK_RPC_PROVIDER=${{ secrets.PROD_WORK_QUEST_PROD_NETWORK_RPC_PROVIDER }} \
          WORK_QUEST_PROD_NETWORK_TENDERMINT_PROVIDER=${{ secrets.PROD_WORK_QUEST_PROD_NETWORK_TENDERMINT_PROVIDER }} \
          WORK_QUEST_PROD_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.PROD_WORK_QUEST_PROD_NETWORK_WEBSOCKET_PROVIDER }} \

          ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.PROD_ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.PROD_RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.PROD_BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          BSC_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.PROD_BSC_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.PROD_POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.PROD_MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BRIDGE_CONTRACT_PRIVATE_KEY=${{ secrets.PROD_BRIDGE_CONTRACT_PRIVATE_KEY }} \

          BRIDGE_USDT_MNEMONIC_WALLET_ADDRESS=${{ secrets.PROD_BRIDGE_USDT_MNEMONIC_WALLET_ADDRESS }} \
          BRIDGE_USDT_CONTRACT_PRIVATE_KEY=${{ secrets.PROD_BRIDGE_USDT_CONTRACT_PRIVATE_KEY }} \

          PM2_FETCHER_WORKER_NAME=${{ secrets.PROD_PM2_FETCHER_WORKER_NAME }} \
          PM2_BRIDGE_WORKER_NAME=${{ secrets.PROD_PM2_BRIDGE_WORKER_NAME }} \
          PM2_PROPOSAL_WORKER_NAME=${{ secrets.PROD_PM2_PROPOSAL_WORKER_NAME }} \
          PM2_WQT_WBNB_WORKER_NAME=${{ secrets.PROD_PM2_WQT_WBNB_WORKER_NAME }} \
          PM2_WQT_WETH_WORKER_NAME=${{ secrets.PROD_PM2_WQT_WETH_WORKER_NAME }} \
          PM2_PENSION_FUND_WORKER_NAME=${{ secrets.PROD_PM2_PENSION_FUND_WORKER_NAME }} \
          PM2_REFERRAL_WORKER_NAME=${{ secrets.PROD_PM2_REFERRAL_WORKER_NAME }} \
          PM2_SAVING_PRODUCT_WORKER_NAME=${{ secrets.PROD_PM2_SAVING_PRODUCT_WORKER_NAME }} \
          PM2_QUEST_WORKER_NAME=${{ secrets.PROD_PM2_QUEST_WORKER_NAME }} \
          PM2_QUEST_FACTORY_WORKER_NAME=${{ secrets.PROD_PM2_QUEST_FACTORY_WORKER_NAME }} \
          PM2_RAISE_VIEW_WORKER_NAME=${{ secrets.PROD_PM2_RAISE_VIEW_WORKER_NAME }} \
          PM2_BRIDGE_USDT_WORKER_NAME=${{ secrets.PROD_PM2_BRIDGE_USDT_WORKER_NAME }} \

          WORKERS_BIN=${{ secrets.PROD_WORKERS_BIN }} \
          SRC_DIR=${{ github.workspace }}/" backend-update.yml;

  deploy-develop:
    environment: develop

    if: "github.ref == 'refs/heads/develop'"
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v3

      - name: Environment preparation
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/id_rsa
          chmod -R go= ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" >> ~/.ssh/id_rsa
          sudo apt-add-repository -y -u ppa:ansible/ansible
          sudo apt-get install -y rsync
          sudo apt-get install -y ansible

      - name: Deploy to Server
        run: |
          chmod 700 ci-scripts
          cd ci-scripts
          ansible-playbook -i "${{ secrets.REMOTE_HOST }}" -e "ansible_user=${{ secrets.REMOTE_USER }} ansible_port=${{ secrets.REMOTE_PORT }} \

          DB_LINK=${{ secrets.DEV_DB_LINK }} \
          SENTRY_LINK=${{ secrets.DEV_SENTRY_LINK }} \
          RABBIT_LINK=${{ secrets.DEV_RABBIT_LINK }} \
          ORACLE_LINK=${{ secrets.DEV_ORACLE_LINK }} \
          REDIS_LINK=${{ secrets.DEV_REDIS_LINK }} \
          NOTIFICATION_MESSAGE_BROKER_LINK=${{ secrets.DEV_NOTIFICATION_MESSAGE_BROKER_LINK }} \

          WORK_QUEST_BLOCKCHAIN_NETWORK=${{ secrets.DEV_WORK_QUEST_BLOCKCHAIN_NETWORK }} \
          BSC_BLOCKCHAIN_NETWORK=${{ secrets.DEV_BSC_BLOCKCHAIN_NETWORK }} \
          ETHEREUM_BLOCKCHAIN_NETWORK=${{ secrets.DEV_ETHEREUM_BLOCKCHAIN_NETWORK }} \
          POLYGONSCAN_BLOCKCHAIN_NETWORK=${{ secrets.DEV_POLYGONSCAN_BLOCKCHAIN_NETWORK }} \

          WORK_QUEST_DEV_NETWORK_RPC_PROVIDER=${{ secrets.DEV_WORK_QUEST_DEV_NETWORK_RPC_PROVIDER }} \
          WORK_QUEST_DEV_NETWORK_TENDERMINT_PROVIDER=${{ secrets.DEV_WORK_QUEST_DEV_NETWORK_TENDERMINT_PROVIDER }} \
          WORK_QUEST_DEV_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.DEV_WORK_QUEST_DEV_NETWORK_WEBSOCKET_PROVIDER }} \

          ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.DEV_ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.DEV_RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.DEV_BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          BSC_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.DEV_BSC_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.DEV_POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.DEV_MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BRIDGE_CONTRACT_PRIVATE_KEY=${{ secrets.DEV_BRIDGE_CONTRACT_PRIVATE_KEY }} \

          PRIVATE_KEY_TO_SEND_FIRST_WQT=${{ secrets.DEV_PRIVATE_KEY_TO_SEND_FIRST_WQT }} \
          WALLET_ADDRESS_TO_SEND_FIRST_WQT=${{ secrets.DEV_WALLET_ADDRESS_TO_SEND_FIRST_WQT }} \

          PM2_FETCHER_WORKER_NAME=${{ secrets.DEV_PM2_FETCHER_WORKER_NAME }} \
          PM2_BRIDGE_WORKER_NAME=${{ secrets.DEV_PM2_BRIDGE_WORKER_NAME }} \
          PM2_PROPOSAL_WORKER_NAME=${{ secrets.DEV_PM2_PROPOSAL_WORKER_NAME }} \
          PM2_WQT_WBNB_WORKER_NAME=${{ secrets.DEV_PM2_WQT_WBNB_WORKER_NAME }} \
          PM2_WQT_WETH_WORKER_NAME=${{ secrets.DEV_PM2_WQT_WETH_WORKER_NAME }} \
          PM2_PENSION_FUND_WORKER_NAME=${{ secrets.DEV_PM2_PENSION_FUND_WORKER_NAME }} \
          PM2_REFERRAL_WORKER_NAME=${{ secrets.DEV_PM2_REFERRAL_WORKER_NAME }} \
          PM2_SAVING_PRODUCT_WORKER_NAME=${{ secrets.DEV_PM2_SAVING_PRODUCT_WORKER_NAME }} \
          PM2_QUEST_WORKER_NAME=${{ secrets.DEV_PM2_QUEST_WORKER_NAME }} \
          PM2_QUEST_FACTORY_WORKER_NAME=${{ secrets.DEV_PM2_QUEST_FACTORY_WORKER_NAME }} \
          PM2_RAISE_VIEW_WORKER_NAME=${{ secrets.DEV_PM2_RAISE_VIEW_WORKER_NAME }} \
          PM2_BRIDGE_USDT_WORKER_NAME=${{ secrets.DEV_PM2_BRIDGE_USDT_WORKER_NAME }} \

          WORKERS_BIN=${{ secrets.DEV_WORKERS_BIN }} \
          SRC_DIR=${{ github.workspace }}/" backend-update.yml;

  deploy-stage:
    environment: Stage

    if: "github.ref == 'refs/heads/stage'"
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v3SWAP_USDT

      - name: Environment preparation
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/id_rsa
          chmod -R go= ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" >> ~/.ssh/id_rsa
          sudo apt-add-repository -y -u ppa:ansible/ansible
          sudo apt-get install -y rsync
          sudo apt-get install -y ansible

      - name: Deploy to Server
        run: |
          chmod 700 ci-scripts
          cd ci-scripts
          ansible-playbook -i "${{ secrets.REMOTE_HOST }}" -e "ansible_user=${{ secrets.REMOTE_USER }} ansible_port=${{ secrets.REMOTE_PORT }} \

          DB_LINK=${{ secrets.DB_LINK }} \
          SENTRY_LINK=${{ secrets.SENTRY_LINK }} \
          RABBIT_LINK=${{ secrets.RABBIT_LINK }} \
          ORACLE_LINK=${{ secrets.ORACLE_LINK }} \
          REDIS_LINK=${{ secrets.REDIS_LINK }} \
          NOTIFICATION_MESSAGE_BROKER_LINK=${{ secrets.NOTIFICATION_MESSAGE_BROKER_LINK }} \

          WORK_QUEST_BLOCKCHAIN_NETWORK=${{ secrets.WORK_QUEST_BLOCKCHAIN_NETWORK }} \
          BSC_BLOCKCHAIN_NETWORK=${{ secrets.BSC_BLOCKCHAIN_NETWORK }} \
          ETHEREUM_BLOCKCHAIN_NETWORK=${{ secrets.ETHEREUM_BLOCKCHAIN_NETWORK }} \
          POLYGONSCAN_BLOCKCHAIN_NETWORK=${{ secrets.POLYGONSCAN_BLOCKCHAIN_NETWORK }} \

          WORK_QUEST_NETWORK_RPC_PROVIDER=${{ secrets.WORK_QUEST_NETWORK_RPC_PROVIDER }} \
          WORK_QUEST_NETWORK_TENDERMINT_PROVIDER=${{ secrets.WORK_QUEST_NETWORK_TENDERMINT_PROVIDER }} \
          WORK_QUEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.WORK_QUEST_NETWORK_WEBSOCKET_PROVIDER }} \

          ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          BSC_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.BSC_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BRIDGE_CONTRACT_PRIVATE_KEY=${{ secrets.BRIDGE_CONTRACT_PRIVATE_KEY }} \

          BRIDGE_USDT_MNEMONIC_WALLET_ADDRESS=${{ secrets.BRIDGE_USDT_MNEMONIC_WALLET_ADDRESS }} \
          BRIDGE_USDT_CONTRACT_PRIVATE_KEY=${{ secrets.BRIDGE_USDT_CONTRACT_PRIVATE_KEY }} \

          PM2_FETCHER_WORKER_NAME=${{ secrets.PM2_FETCHER_WORKER_NAME }} \
          PM2_BRIDGE_WORKER_NAME=${{ secrets.PM2_BRIDGE_WORKER_NAME }} \
          PM2_PROPOSAL_WORKER_NAME=${{ secrets.PM2_PROPOSAL_WORKER_NAME }} \
          PM2_WQT_WBNB_WORKER_NAME=${{ secrets.PM2_WQT_WBNB_WORKER_NAME }} \
          PM2_WQT_WETH_WORKER_NAME=${{ secrets.PM2_WQT_WETH_WORKER_NAME }} \
          PM2_PENSION_FUND_WORKER_NAME=${{ secrets.PM2_PENSION_FUND_WORKER_NAME }} \
          PM2_REFERRAL_WORKER_NAME=${{ secrets.PM2_REFERRAL_WORKER_NAME }} \
          PM2_SAVING_PRODUCT_WORKER_NAME=${{ secrets.PM2_SAVING_PRODUCT_WORKER_NAME }} \
          PM2_QUEST_WORKER_NAME=${{ secrets.PM2_QUEST_WORKER_NAME }} \
          PM2_QUEST_FACTORY_WORKER_NAME=${{ secrets.PM2_QUEST_FACTORY_WORKER_NAME }} \
          PM2_RAISE_VIEW_WORKER_NAME=${{ secrets.PM2_RAISE_VIEW_WORKER_NAME }} \
          PM2_BRIDGE_USDT_WORKER_NAME=${{ secrets.PM2_BRIDGE_USDT_WORKER_NAME }} \

          WORKERS_BIN=${{ secrets.WORKERS_BIN }} \
          SRC_DIR=${{ github.workspace }}/" backend-update.yml;

  deploy-TestNetwork:
    environment: TestNetwork

    if: "github.ref == 'refs/heads/TestNetwork'"
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v3

      - name: Environment preparation
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/id_rsa
          chmod -R go= ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" >> ~/.ssh/id_rsa
          sudo apt-add-repository -y -u ppa:ansible/ansible
          sudo apt-get install -y rsync
          sudo apt-get install -y ansible

      - name: Deploy to Server
        run: |
          chmod 700 ci-scripts
          cd ci-scripts
          ansible-playbook -i "${{ secrets.REMOTE_HOST }}" -e "ansible_user=${{ secrets.REMOTE_USER }} ansible_port=${{ secrets.REMOTE_PORT }} \

          DB_LINK=${{ secrets.DB_LINK }} \
          SENTRY_LINK=${{ secrets.SENTRY_LINK }} \
          RABBIT_LINK=${{ secrets.RABBIT_LINK }} \
          ORACLE_LINK=${{ secrets.ORACLE_LINK }} \
          REDIS_LINK=${{ secrets.REDIS_LINK }} \
          NOTIFICATION_MESSAGE_BROKER_LINK=${{ secrets.NOTIFICATION_MESSAGE_BROKER_LINK }} \

          WORK_QUEST_BLOCKCHAIN_NETWORK=${{ secrets.WORK_QUEST_BLOCKCHAIN_NETWORK }} \
          BSC_BLOCKCHAIN_NETWORK=${{ secrets.BSC_BLOCKCHAIN_NETWORK }} \
          ETHEREUM_BLOCKCHAIN_NETWORK=${{ secrets.ETHEREUM_BLOCKCHAIN_NETWORK }} \
          POLYGONSCAN_BLOCKCHAIN_NETWORK=${{ secrets.POLYGONSCAN_BLOCKCHAIN_NETWORK }} \

          WORK_QUEST_DEV_NETWORK_RPC_PROVIDER=${{ secrets.WORK_QUEST_DEV_NETWORK_RPC_PROVIDER }} \

          WORK_QUEST_TEST_NETWORK_RPC_PROVIDER=${{ secrets.WORK_QUEST_TEST_NETWORK_RPC_PROVIDER }} \

          ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.ETH_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.RINKEBY_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.BSC_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          BSC_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.BSC_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.POLYGON_MAIN_NETWORK_WEBSOCKET_PROVIDER }} \
          MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER=${{ secrets.MUMBAI_TEST_NETWORK_WEBSOCKET_PROVIDER }} \

          BRIDGE_CONTRACT_PRIVATE_KEY=${{ secrets.BRIDGE_CONTRACT_PRIVATE_KEY }} \

          BRIDGE_USDT_MNEMONIC_WALLET_ADDRESS=${{ secrets.BRIDGE_USDT_MNEMONIC_WALLET_ADDRESS }} \
          BRIDGE_USDT_CONTRACT_PRIVATE_KEY=${{ secrets.BRIDGE_USDT_CONTRACT_PRIVATE_KEY }} \

          PM2_FETCHER_WORKER_NAME=${{ secrets.PM2_FETCHER_WORKER_NAME }} \
          PM2_BRIDGE_WORKER_NAME=${{ secrets.PM2_BRIDGE_WORKER_NAME }} \
          PM2_PROPOSAL_WORKER_NAME=${{ secrets.PM2_PROPOSAL_WORKER_NAME }} \
          PM2_WQT_WBNB_WORKER_NAME=${{ secrets.PM2_WQT_WBNB_WORKER_NAME }} \
          PM2_WQT_WETH_WORKER_NAME=${{ secrets.PM2_WQT_WETH_WORKER_NAME }} \
          PM2_PENSION_FUND_WORKER_NAME=${{ secrets.PM2_PENSION_FUND_WORKER_NAME }} \
          PM2_REFERRAL_WORKER_NAME=${{ secrets.PM2_REFERRAL_WORKER_NAME }} \
          PM2_SAVING_PRODUCT_WORKER_NAME=${{ secrets.PM2_SAVING_PRODUCT_WORKER_NAME }} \
          PM2_QUEST_WORKER_NAME=${{ secrets.PM2_QUEST_WORKER_NAME }} \
          PM2_QUEST_FACTORY_WORKER_NAME=${{ secrets.PM2_QUEST_FACTORY_WORKER_NAME }} \
          PM2_RAISE_VIEW_WORKER_NAME=${{ secrets.PM2_RAISE_VIEW_WORKER_NAME }} \
          PM2_BRIDGE_USDT_WORKER_NAME=${{ secrets.PM2_BRIDGE_USDT_WORKER_NAME }} \

          WORKERS_BIN=${{ secrets.WORKERS_BIN }} \
          SRC_DIR=${{ github.workspace }}/" backend-update.yml;
